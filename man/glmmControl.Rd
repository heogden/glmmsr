% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/control.R
\name{glmmControl}
\alias{glmmControl}
\title{Control of GLMM fitting}
\usage{
glmmControl(method = "lme4", nAGQ = 1, n_sparse_levels = 0, verbose = 0,
  factorization_file = NULL, optimizer = c("bobyqa", "Nelder_Mead"),
  restart_edge = FALSE, boundary.tol = 1e-05, calc.derivs = TRUE,
  use.last.params = FALSE, sparseX = FALSE, tolPwrss = 1e-07,
  compDev = TRUE, nAGQ0initStep = TRUE, check.nobs.vs.rankZ = "ignore",
  check.nobs.vs.nlev = "ignore", check.nlev.gtreq.5 = "ignore",
  check.nlev.gtr.1 = "ignore", check.nobs.vs.nRE = "ignore",
  check.rankX = c("message+drop.cols", "silent.drop.cols", "warn+drop.cols",
  "stop.deficient", "ignore"), check.scaleX = "warning",
  check.formula.LHS = "stop", check.response.not.const = "ignore",
  check.conv.grad = .makeCC("warning", tol = 0.001, relTol = NULL),
  check.conv.singular = .makeCC(action = "ignore", tol = 1e-04),
  check.conv.hess = .makeCC(action = "warning", tol = 1e-06),
  optCtrl = list())
}
\arguments{
\item{method}{the name of the method used for approximating the likelihood}

\item{nAGQ}{the number of adaptive Gaussian quadrature points to use for integration}

\item{verbose}{integer scalar.  If \code{> 0} verbose output is
    generated during the optimization of the parameter estimates.  If
    \code{> 1} verbose output is generated during the individual PIRLS
    steps.}

\item{factorization_file}{a name of a file to save factorization terms to, if method "SR" is used}

\item{optimizer}{character - name of optimizing function(s). See
\code{\link{glmerControl}} for more details.}

\item{restart_edge}{logical - should the optimizer
    attempt a restart when it finds a solution at the
    boundary (i.e. zero random-effect variances or perfect
    +/-1 correlations)?  (Currently only implemented for
    \code{lmerControl}.)}

\item{boundary.tol}{numeric - within what distance of
    a boundary should the boundary be checked for a better fit?
    (Set to zero to disable boundary checking.)}

\item{calc.derivs}{logical - compute gradient and Hessian of nonlinear
    optimization solution?}

\item{use.last.params}{logical - should the last value of the
    parameters evaluated (\code{TRUE}), rather than the value of the
    parameters corresponding to the minimum deviance, be returned?
    This is a "backward bug-compatibility" option; use \code{TRUE}
    only when trying to match previous results.}

\item{sparseX}{logical - should a sparse model matrix be
    used for the fixed-effects terms?
    Currently inactive.}

\item{tolPwrss}{numeric scalar - the tolerance for declaring
    convergence in the penalized iteratively weighted residual
    sum-of-squares step.}

\item{compDev}{logical scalar - should compiled code be
    used for the deviance evaluation during the optimization
    of the parameter estimates?}

\item{nAGQ0initStep}{do one initial run with \code{nAGQ = 0}.}

\item{check.nobs.vs.rankZ}{character - rules for
    checking whether the number of observations is greater
    than (or greater than or equal to) the rank of the random
    effects design matrix (Z), usually necessary for
    identifiable variances.  As for \code{action}, with
    the addition of \code{"warningSmall"} and \code{"stopSmall"}, which run
    the test only if the dimensions of \code{Z} are < 1e6.
    \code{nobs > rank(Z)} will be tested for LMMs and GLMMs with
    estimated scale parameters; \code{nobs >= rank(Z)} will be tested
    for GLMMs with fixed scale parameter.
    The rank test is done using the
    \code{method="qr"} option of the \code{\link[Matrix]{rankMatrix}}
    function.
  }

\item{check.nobs.vs.nlev}{ character - rules for checking whether the
    number of observations is less than (or less than or equal to) the
    number of levels of every grouping factor, usually necessary for
    identifiable variances.  As for \code{action}.
    \code{nobs<nlevels} will be tested for LMMs and GLMMs with estimated
    scale parameters; \code{nobs<=nlevels} will be tested for GLMMs with
    fixed scale parameter.}

\item{check.nlev.gtreq.5}{character - rules for
    checking whether all random effects have >= 5 levels.
    See \code{action}.}

\item{check.nlev.gtr.1}{character - rules for checking
    whether all random effects have > 1 level. See \code{action}.}

\item{check.nobs.vs.nRE}{character - rules for
    checking whether the number of observations is greater
    than (or greater than or equal to) the number of random-effects
    levels for each term, usually necessary for identifiable variances.
    As for \code{check.nobs.vs.nlev}.}

\item{check.rankX}{character - specifying if \code{\link[Matrix]{rankMatrix}(X)}
    should be compared with \code{ncol(X)} and if columns from the design
    matrix should possibly be dropped to ensure that it has full rank.
    Sometimes needed to make the model identifiable.  The options can be
    abbreviated; the three \code{"*.drop.cols"} options all do drop
    columns, \code{"stop.deficient"} gives an error when the rank is
    smaller than the number of columns where \code{"ignore"} does no
    rank computation, and will typically lead to less easily
    understandable errors, later.}

\item{check.scaleX}{character - check for problematic scaling of
    columns of fixed-effect model matrix, e.g. parameters measured on
    very different scales.}

\item{check.formula.LHS}{ check whether specified formula has
    a left-hand side. Primarily for internal use within
    \code{simulate.merMod};
    \emph{use at your own risk} as it may allow the generation
    of unstable \code{merMod} objects}

\item{check.response.not.const}{character - check that the
    response is not constant.}

\item{check.conv.grad}{rules for checking the gradient of the deviance
    function for convergence.  A list as returned
    by \code{.makeCC}, or a character string with only the action.}

\item{check.conv.singular}{rules for checking for a singular fit,
    i.e. one where some parameters are on the boundary of the feasible
    space (for example, random effects variances equal to 0 or
    correlations between random effects equal to +/- 1.0);
    as for \code{check.conv.grad} above.}

\item{check.conv.hess}{rules for checking the Hessian of the deviance
    function for convergence.; as for \code{check.conv.grad}
    above.}

\item{optCtrl}{a \code{\link{list}} of additional arguments to be
    passed to the nonlinear optimizer (see \code{\link{Nelder_Mead}},
    \code{\link[minqa]{bobyqa}}).  In particular, both
    \code{Nelder_Mead} and \code{bobyqa} use \code{maxfun} to
    specify the maximum number of function evaluations they
    will try before giving up - in contrast to
    \code{\link{optim}} and \code{optimx}-wrapped optimizers,
    which use \code{maxit}.}

\item{k}{the level of sparse grid storage, used by method "SR"}
}
\description{
A version of \code{\link{glmerControl}}, from \code{lme4}, with different
defaults.
}

